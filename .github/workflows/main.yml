name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout master
#        uses: actions/checkout@v3
#
#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.17.7
#
#      - name: Run Tests
#        run: go test ./...
#
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout master
#        uses: actions/checkout@v3
#
#      - name: Run Lints
#        uses: golangci/golangci-lint-action@v3
#        with:
#          version: v1.49
#
#  build_and_push:
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push'
#    needs:
#      - test
#      - lint
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Build and Push
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/actions:latest

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
#    needs: build_and_push
    steps:
      - name: SSH connect
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
#
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

          script: |
            docker push ruauka/actions:tagname

#            # Login into Digital Ocean Registry
#            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} $(echo $REGISTRY)
#            # Set env variables
#            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
#            export ACCESS_KEY=${{ secrets.ACCESS_KEY }}
#            export SECRET_KEY=${{ secrets.SECRET_KEY }}
#            # Stop running container
#            docker stop $(echo $CONTAINER_NAME)
#            # Remove old container
#            docker rm $(echo $CONTAINER_NAME)
#            # Run a new container from a new image
#            docker run --env-file $(echo $ENV_FILE_PATH) \
#            -v $(echo $LOGS_PATH):/logs -d \
#            --restart always \
#            --publish 8000:8000 \
#            --name $(echo $CONTAINER_NAME) \
#            --link=jewerly-db:db \
#            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)